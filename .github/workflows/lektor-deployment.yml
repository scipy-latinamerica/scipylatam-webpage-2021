name: lektor-deployment

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  deploy-dev:
    name: Deploy to Development
    if: github.event_name == 'pull_request'
    runs-on: ubuntu-latest
    environment:
      name: Development
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python 3.7
        uses: actions/setup-python@v2
        with:
          python-version: 3.7
      - name: Install Poetry
        uses: snok/install-poetry@v1.1.1
        with:
          version: 1.1.4
          virtualenvs-create: true
          virtualenvs-in-project: true
      - name: Load cached venv
        id: cached-poetry-dependencies
        uses: actions/cache@v2
        with:
          path: .venv
          key: packages-${{ runner.os }}-${{ hashFiles('**/poetry.lock') }}
      - name: Install dependencies
        if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
        run: poetry install --no-interaction --no-ansi

      # -----------------------------

      - name: Set up Node
        uses: actions/setup-node@v2
        with:
          node-version: 14.2.0
      - name: Install Yarn
        run: npm install -g yarn
      - name: Load cached Yarn
        id: cached-yarn-dependencies
        uses: actions/cache@v2
        with:
          path: ./webpack/node_modules
          key: packages-${{ runner.os }}-${{ hashFiles('**/webpack/yarn.lock') }}
      - name: Install dependencies
        if: steps.cached-yarn-dependencies.outputs.cache-hit != 'true'
        run: cd webpack && yarn

      # -----------------------------

      - name: Deploy Finished
        run: echo "Deploy finished at $(date +'%Y-%m-%dT%H:%M:%S')!"

  deploy-staging:
    name: Deploy to Staging
    if: github.event.ref == 'refs/heads/main'
    needs: [build]
    runs-on: ubuntu-latest
    environment:
      name: Staging
      url: 'https://dev.scipy.lat/'
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python 3.7
        uses: actions/setup-python@v2
        with:
          python-version: 3.7
      - name: Install Poetry
        uses: snok/install-poetry@v1.1.1
        with:
          version: 1.1.4
          virtualenvs-create: true
          virtualenvs-in-project: true
      - name: Load cached venv
        id: cached-poetry-dependencies
        uses: actions/cache@v2
        with:
          path: .venv
          key: packages-${{ runner.os }}-${{ hashFiles('**/poetry.lock') }}
      - name: Install dependencies
        if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
        run: poetry install --no-interaction --no-ansi

      # -----------------------------

      - name: Set up Node
        uses: actions/setup-node@v2
        with:
          node-version: 14.2.0
      - name: Install Yarn
        run: npm install -g yarn
      - name: Load cached Yarn
        id: cached-yarn-dependencies
        uses: actions/cache@v2
        with:
          path: ./webpack/node_modules
          key: packages-${{ runner.os }}-${{ hashFiles('**/webpack/yarn.lock') }}
      - name: Install dependencies
        if: steps.cached-yarn-dependencies.outputs.cache-hit != 'true'
        run: cd webpack && yarn

      # -----------------------------

      - name: Deploy Finished
        env:
          LEKTOR_DEPLOY_USERNAME: ${{ secrets.LEKTOR_DEPLOY_USERNAME }}
          LEKTOR_DEPLOY_PASSWORD: ${{ secrets.LEKTOR_DEPLOY_PASSWORD }}
          URL_SITE: ${{ secrets.URL_SITE }}
        run: |
          envsubst < "lektorproject.template" > "scipy-latin-america-2021.lektorproject"
          poetry run lektor server -f webpack
          poetry run lektor deploy staging
          echo "Deploy finished at $(date +'%Y-%m-%dT%H:%M:%S')!"

  deploy-production:
    name: Deploy to Production
    needs: [deploy-staging]
    runs-on: ubuntu-latest
    environment:
      name: Production
      url: 'https://conf.scipy.lat/'
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python 3.7
        uses: actions/setup-python@v2
        with:
          python-version: 3.7
      - name: Install Poetry
        uses: snok/install-poetry@v1.1.1
        with:
          version: 1.1.4
          virtualenvs-create: true
          virtualenvs-in-project: true
      - name: Load cached venv
        id: cached-poetry-dependencies
        uses: actions/cache@v2
        with:
          path: .venv
          key: packages-${{ runner.os }}-${{ hashFiles('**/poetry.lock') }}
      - name: Install dependencies
        if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
        run: poetry install --no-interaction --no-ansi

      # -----------------------------

      - name: Set up Node
        uses: actions/setup-node@v2
        with:
          node-version: 14.2.0
      - name: Install Yarn
        run: npm install -g yarn
      - name: Load cached Yarn
        id: cached-yarn-dependencies
        uses: actions/cache@v2
        with:
          path: ./webpack/node_modules
          key: packages-${{ runner.os }}-${{ hashFiles('**/webpack/yarn.lock') }}
      - name: Install dependencies
        if: steps.cached-yarn-dependencies.outputs.cache-hit != 'true'
        run: cd webpack && yarn

      # -----------------------------

      - name: Deploy Finished
        env:
          LEKTOR_DEPLOY_USERNAME: ${{ secrets.LEKTOR_DEPLOY_USERNAME }}
          LEKTOR_DEPLOY_PASSWORD: ${{ secrets.LEKTOR_DEPLOY_PASSWORD }}
        run: |
          poetry run lektor server -f webpack
          poetry run lektor deploy production
          echo "Deploy finished at $(date +'%Y-%m-%dT%H:%M:%S')!"
